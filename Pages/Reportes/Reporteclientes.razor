@page "/reporteclientes"
@inject IJSRuntime JSRuntime;

<div>
    <img src="/logoempresa.jpg" class=" estilo-imagen">
    <div style="margin-left: 300px;">
        <div class="col-xs-6 col-sm-6 col-md-6 text-center" style="margin-left: 30px;">
            <div class="receipt-right ">
                <h5>Rnc: 3732199193-19</h5>
                <p>
                    Direccion :Calle No.71 Provincia Sánchez Ramírez, La Cueva
                    de Cevicos, RD.
                </p>
                <p>Telefono : 8092670797 <i class="fa fa-phone"></i></p>
                <p>Email :  LaGrandota@gmail.com <i class="fa fa-envelope-o"></i></p>
            </div>
        </div>
        @*   <p > <strong  > Hola es una prueba </strong> </p>*@


    </div>
    <style>


        /* Estilo para resaltar las filas al pasar el cursor */
        .table-hover tbody tr:hover {
            background-color: #f5f5f5; /* Cambia el color al pasar el cursor */
        }

        /* Estilo para el contenedor de la tabla */
        .table-container {
            margin-top: -5px;
        }

        /* Estilo para el cuerpo de la tarjeta */
        .card-body {
            padding: 19px;
        }

        /* Estilo para centrar el texto en las celdas de la tabla */
        .table th, .table td {
            text-align: center;
        }

        .estilo-imagen {
            color: #ffffff; /* Texto blanco */
            text-align: center; /* Centrar texto */
            padding: 10px; /* A�adir espacio alrededor del texto */
            width: 250px;
            margin-left: 350px;
        }

        .titulo-clientes {
            margin-left: 270px;
        }
    </style>




</div>


<div class="table-container ">
    <div class="card w-130">

        <h1 class="titulo-clientes">Listado de Clientes</h1>
        <div class="card-body">
            <!-- Button trigger modal -->

            <div class="col-md-3" style="margin-top: 20px; margin-left: 20px;">


                <button class="btn btn-outline-primary d-print-none" @onclick="async ()=>{await PrintPageAsync();}">
                    <span class="oi oi-print"></span>
                </button>
            </div>

            <div class="row justify-content-end">
                <div class="col-6">
                    <div class="input-group">
                    </div>
                </div>
            </div>

            <div class="row-12 mt-2">
                <!-- A�adido 'table-hover' a la clase 'table' para resaltar filas al pasar el cursor -->
                <table class="table table-hover">
                    <thead class="table" style="background-color:steelblue;">
                        <tr>
                            <th>Nombre/</th>
                            <th>Apellido</th>


                            <th>Cedula</th>
                            <th>Telefono</th>
                            <th>Direccion</th>
                            <th>Limite de credito</th>



                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var provedorrow in Cliente)
                        {
                            <tr>
                                <td>@provedorrow.Nombre</td>
                                <td>@provedorrow.Apellidos</td>


                                <td>@provedorrow.Cedula</td>
                                <td>@provedorrow.Telefono</td>
                                <td>@provedorrow.Direccion</td>
                                <td>@provedorrow.Limitecredito</td>



                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



@code{

    public string TituloForm => clienterequest.Id == 0 ?
       "Agregar listado de clientes" : "Modificar clientes";

    public string Filtro { get; set; } = "";
    public bool ShowForm { get; set; } = false;
    public List<ClienteResponse> Cliente { get; set; } = new();
    public ClienteRequest clienterequest { get; set; } = new();
    public bool showCard { get; set; } = false;

    private async Task PrintPageAsync()
    {

        await JSRuntime.InvokeVoidAsync("printPage");


    }

    void ShowCard()
    {
        showCard = true;
    }

    void CloseCard()
    {
        clienterequest = new ClienteRequest();
        showCard = false;
    }

    async Task CargarContactos()
    {
        var resultado =
        await ClienteServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Cliente = resultado.Data!;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarContactos();
    }

    void Cancelar()
    {
        clienterequest = new ClienteRequest();
        showCard = false;
    }
    public async Task Send()
    {
        if (clienterequest.Id == 0)
        {
            //Debo registrar el contacto..
            var r = await ClienteServices.Crear(clienterequest);
            if (r.Success)
            {
                Cancelar();
                await CargarContactos();
                StateHasChanged();
            }
        }
        else
        {
            //Debo solicitar modificar el contacto...
            var r = await ClienteServices.Modificar(clienterequest);
            if (r.Success)
            {
                Cancelar();
                await CargarContactos();
                StateHasChanged();
            }
        }
    }

    public void Seleccionar(int Id)
    {
        showCard = true;
        clienterequest = Cliente
        .Where(c => c.Id == Id)
        .Select(c => c.ToRequest())
        .FirstOrDefault() ?? new ClienteRequest();
    }
    public async Task Eliminar(ClienteResponse item)
    {
        var resultado = await ClienteServices.Eliminar(item.ToRequest());
        if (resultado.Success)
        {
            await CargarContactos();
            StateHasChanged();
        }
    }






}
