@inject IUsuarioServices usuarioservices
@using FactuSystem.Data.Request;
@using FactuSystem.Data.Response;
@page "/funcionesadmin"
<style>
    /* Estilo para resaltar las filas al pasar el cursor */
    .table-hover tbody tr:hover {
        background-color: #f5f5f5; /* Cambia el color al pasar el cursor */
    }

    /* Estilo para el contenedor de la tabla */
    .table-container {
        margin-top: -5px;
        margin-top: 20px; /* Agrega un margen superior para separar los contenedores */
    }

    /* Estilo para el cuerpo de la tarjeta */
    .card-body {
        padding: 19px;
    }

    /* Estilo para centrar el texto en las celdas de la tabla */
    .table th, .table td {
        text-align: center;
    }

    .titulo-item {
        background-color: steelblue; /* Fondo oscuro */
        color: #ffffff; /* Texto blanco */
        text-align: center; /* Centrar texto */
        padding: 10px; /* A�adir espacio alrededor del texto */
    }
   

</style>

<div style="margin-left: 450px;">
    <div class="table-container" style="margin-top: 17px;">
        <div class="card w-130">
            <h1 class="titulo-item">Funciones de administrador</h1>
            <div class="card-body ">
                <div class="container mt-3">
                    <div class="btn-group">
                        <button type="button" class="btn btn-primary" @onclick="ShowCard">Control y creacion de usuarios </button>
                        <button type="button" class="btn btn-primary">   </button>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown"></button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#"></a></li>
                                <li><a class="dropdown-item" href="#"></a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal" style="display: @(showCard ? "block" : "none"); background-color: rgba(0, 0, 0, 0.5);" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>@TituloForm</b></h5>
                    <button type="button" class="close btn btn-outline-danger" data-dismiss="modal" aria-label="Close" @onclick="CloseCard">
                        <span aria-hidden="true" class="oi oi-x"></span>
                    </button>
                </div>

                <EditForm Model="request" OnValidSubmit="Send">
                    @if (Message != null)
                    {
                        <div class="alert-danger">
                            <span class="text-danger">@Message</span>
                        </div>
                    }
                    <div class="modal-body">
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class=" oi oi-person"></span>
                                </span>
                            </div>
                            <input type="text" class="form-control" placeholder="Nombre" id="nombreCompleto"
                            @bind-value="request.Nombre" required />
                        </div>
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class=" oi oi-person"></span>
                                </span>
                            </div>
                            <input type="text" class="form-control" placeholder="Apellido" id="correo"
                            @bind-value="request.Apellidos" required min="0.01" step="0.01" />
                        </div>
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-envelope-closed"></span>
                                </span>
                            </div>
                            <input type="text" class="form-control" placeholder="Email" id="correo"
                            @bind-value="request.Email" required />
                        </div>
                        <div class="form-group input-group mb-3">
                           
                        </div>
                        
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-lock-locked"></span>
                                </span>
                            </div>
                            <input class="form-control" placeholder="Clave" id="correo"
                            @bind-value="request.Password" required min="0.01" step="0.01" />
                        </div>
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-lock-locked"></span>
                                </span>
                            </div>
                            <input class="form-control" placeholder="confirmar clave" id="correo"
                            @bind-value="@confirmarClave" required min="0.01" step="0.01" />
                        </div>
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-person"></span>
                                </span>
                            </div>
                            <select class="form-control" id="rol" @bind="request.Role">
                                <option value="Administrator">Administrator</option>
                                <option value="User">User</option>
                            </select>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <div class="btn-group">
                            <button type="submit" class="btn btn-outline-primary">Guardar</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
        <div class="table-container">
            <div class="card w-130">
                <h1 class="titulo-item">Listado de Usuarios</h1>
                <div class="card-body ">
                    <!-- Button trigger modal -->
                    <button class="btn btn-outline-primary" @onclick="ShowCard">
                        <span class="oi oi-plus"></span>
                    </button>

                    <div class="row">
                        <div class="col-7"></div>
                        <div class="col-5">
                            <div class="col input-group">
                                <input type="text" class="form-control border-0 border-bottom" placeholder="Buscar por nombre" @bind="Filtro">
                                <button class="btn btn-outline input-group-text border-0 bg-white" type="button" id="button-addon2" @onclick="()=>CargarUsuarios()">
                                    <span class="oi oi-magnifying-glass text-black"></span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-2 px-9">
                        <table class="table table-hover">
                            <thead class="table" style="background-color:steelblue;">
                                <tr>
                                    <th>Nombre</th>
                                    <th>Apellido</th>
                                    <th>Correo</th>
                                    <th>Clave</th>
                                    <th>Rol</th>
                                    <th>...</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var productoRow in Users)
                                {
                                    <tr>
                                        <td>@productoRow.Nombre</td>
                                        <td>@productoRow.Apellidos</td>
                                        <td>@productoRow.Email</td>
                                        <td>@productoRow.Password</td>
                                        <td>@productoRow.Role</td>
                                        <td>
                                            <button @onclick="()=>Seleccionar(productoRow.Id)" class="btn btn-outline-warning">
                                                <span class="oi oi-pencil"></span>
                                            </button>
                                            <button @onclick="()=>Eliminar(productoRow)" class="btn btn-outline-danger">
                                                <span class="oi oi-trash"></span>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    public bool showCard { get; set; } = false;
    public string TituloForm => request.Id == 0 ? "Agregar usuario" : "Modificar Usuario";
    public string Filtro { get; set; } = "";
    public List<UsuarioResponse> Users { get; set; } = new();
    public UsuarioRequest request { get; set; } = new UsuarioRequest();
    public string confirmarClave { get; set; } = "";
    public async Task Eliminar(UsuarioResponse item)
    {
        var resultado = await usuarioservices.Eliminar(item.ToRequest());
        if (resultado.Success)
        {
            await CargarUsuarios();
            StateHasChanged();
        }
    }
    public void Seleccionar(int Id)
    {
        showCard = true;
        request = Users.Where(c => c.Id == Id).Select(c => c.ToRequest()).FirstOrDefault() ?? new UsuarioRequest();
    }
    public string Message { get; set; } = "";

    void ShowCard()
    {
        showCard = true;
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuarios();
    }

    async Task CargarUsuarios()
    {
        var resultado = await usuarioServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Users = resultado.Data!;
        }
    }

    public async Task Send()
    {
        if (request.Id == 0)
        {
            var existingUser = Users.FirstOrDefault(u => u.Email.Equals(request.Email, StringComparison.OrdinalIgnoreCase));
            if (existingUser != null)
            {
                Message = "El correo electrónico ya existe";
            }
            else
            {
                if (request.Password != confirmarClave)
                {
                    Message = "Las claves no coinciden";
                    return;
                }

                request.Role = "User";

                var r = await usuarioServices.Crear(request);
                if (r.Success)
                {
                    Cancelar();
                    await CargarUsuarios();
                    StateHasChanged();
                }
            }
        }
    }

    void CloseCard()
    {
        showCard = false;
    }

    void Cancelar()
    {
        request = new UsuarioRequest();
        urlHelper.NavigateTo("/paginaprincipal", forceLoad: true);
    }
}