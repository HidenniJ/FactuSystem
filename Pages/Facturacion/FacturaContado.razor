@page "/factura/paga"
@using FactuSystem.Data.Response;
@inject IJSRuntime JSRuntime;
<script>
    function printPage() {
    window.print();
}
</script>

<PageTitle>Factura</PageTitle>

@if(!ShowDetails)
{
    <form @onsubmit="BuscarFacturas">
        <div class="row mb-3 d-print-none">
            <div class="col-md-3 form-group">
                <div class="input-group">
                    <input type="date" class="form-control" @bind="fechaFiltro">
                    <button type="submit" class="btn btn-outline-primary">
                        <span class="oi oi-magnifying-glass"></span>
                    </button>
                </div>
            </div>
            <div class="col-md-3">
                <button class="btn btn-outline-primary d-print-none" @onclick="PrintPageAsync">
                    <span class="oi oi-print"></span>
                </button>
            </div>
            <div class="col-md-1">
                 
            </div>
        </div>
    </form>
}
else
{
    <div class="row">
        <div class="col-10">
            <h3 class="card-title"><b>@TituloForm</b></h3>
        </div>
        <div class="col-2">
            <button class="btn btn-outline-danger d-print-none"
                @onclick="Back">
                <span class="oi oi-arrow-left"></span>
            </button>
            <button class="btn btn-outline-primary d-print-none" @onclick="PrintPageAsync">
                <span class="oi oi-print"></span>
            </button>
        </div>
    </div>
}
<hr>
@if(!ShowDetails)
{
    <div class="container">
        <h3 class="card-title"><b>@TituloForm</b></h3>
    </div>
}
<div class="container">
    @if(ShowDetails)
    {
        <h5><b>Fecha:</b> @SelectedFactura.Fecha.ToShortDateString()</h5>
        <h5><b>Cliente:</b> @SelectedFactura.Cliente.Nombre @SelectedFactura.Cliente.Apellidos</h5>
        <!-- Mostrar detalles de la factura seleccionada -->
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead class="table" style="background-color:steelblue;">
                    <tr>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Descripción</th>
                        <th scope="col">Precio sin ITEBIS</th>
                        <th scope="col">ITBIS</th>
                        <th scope="col">Precio con ITEBIS</th>
                        <th scope="col">Total</th>
                        <th scope="col">Descuento</th>
                        <th scope="col">Importe</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var detalle in FacturaDetalles)
                    {
                        <tr>
                            <td>@detalle.Cantidad</td>
                            <td>@detalle.Producto.Nombre</td>
                            <td>$ @($"{(detalle.Precio - detalle.Precio * 0.18m):N2}")</td>
                            <td>
                                <span style="white-space: nowrap;">
                                    $ @($"{(detalle.Precio * 0.18m):N2}")
                                </span>
                            </td>
                            <td>$ @detalle.Precio.ToString("N2")</td>
                            <td>$ @detalle.SubTotal.ToString("N2")</td>
                            <td>$ @detalle.TotalDesc.ToString("N2")</td>
                            <td>$ @($"{(detalle.SubTotal - detalle.TotalDesc):N2}")</td>
                        </tr>
                    }
                    <tr>
                        <td colspan="6"></td>
                        <td><b>ITBIS:</b></td>
                        <td>$ @FacturaDetalles.Sum(c => c.Precio * 0.18m).ToString("N2")</td>
                    </tr>
                    <tr>
                        <td colspan="6"></td>
                        <td><b>SubTotal:</b></td>
                        <td>$ @FacturaDetalles.Sum(c => c.Precio).ToString("N2")</td>
                    </tr>
                    <tr>
                        <td colspan="6"></td>
                        <td><b>Descuento:</b></td>
                        <td>$ @FacturaDetalles.Sum(c => c.TotalDesc).ToString("N2")</td>
                    </tr>
                    <tr>
                        <td colspan="6"></td>
                        <td><b>Total:</b></td>
                        <td>$ @FacturaDetalles.Sum(c => c.SubTotal - c.TotalDesc).ToString("N2")</td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
    else if(Facturas != null)
    {
        <!-- Mostrar la lista de facturas -->
        <table class="table table-striped">
            <thead class="table" style="background-color:steelblue;">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Cliente</th>
                    <th scope="col">ITBIS</th>
                    <th scope="col">Total</th>
                    <th scope="col">Descuento</th>
                    <th scope="col">Importe</th>
                    <th scope="col">Fecha</th>
                    <th scope="col">...</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var f in Facturas)
            {
                
                @if(f.SaldoPendiente == 0)    
                {
                    <tr>
                        <th scope="row">@f.Id</th>
                        <td>@f.Cliente.Nombre @f.Cliente.Apellidos</td>
                        <td>
                            <span style="white-space: nowrap;">
                                @($"{(f.SubTotal * 0.18m):N2}")
                            </span>
                        </td>
                        <td>@f.SubTotal.ToString("N2")</td>
                        <td>@f.TotalDesc.ToString("N2")</td>
                        <td>@($"{(f.SubTotal - f.TotalDesc):N2}")</td>
                        <td>@f.Fecha</td>
                        <td>
                            <div class="button d-print-none">
                                <button @onclick="() => MostrarDetalles(f)"
                                    class="btn btn-outline-info">
                                    <span class="oi oi-info"></span>
                                </button>
                                <button @onclick="() => Eliminar(f)" class="btn btn-outline-danger d-print-none" >
                                    <span class="oi oi-trash"></span>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    }
</div>

@code
{
    public DateTime? fechaFiltro { get; set; }
    public string TituloForm => ShowDetails == false ?
    "Módulo de facturas al contado" : "Módulo de facturación";
    public bool ShowDetails { get; set; } = false;
    public List<FacturaResponse> Facturas { get; set; } = new();
    public List<FacturaDetalleResponse> FacturaDetalles { get; set; } = new();
    public FacturaResponse? SelectedFactura { get; set; } // Factura seleccionada
    
    public async Task BuscarFacturas()
    {
        var resultado = await facturaServices.BuscarFacturas(fechaFiltro);
        if (resultado.Success)
        {
            Facturas = resultado.Data ?? new List<FacturaResponse>();
        }
        StateHasChanged();
    }

    void Back()
    {
        urlHelper.NavigateTo(urlHelper.Uri, forceLoad: true);
    }
     async Task Consultar()
    {
        var resultado = await facturaServices.Consultar();
        if (resultado.Success)
        {
            Facturas = resultado.Data?.OrderByDescending(f => f.Fecha).ToList() ?? new List<FacturaResponse>();
        }
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await Consultar();
    }

    public async Task Eliminar(FacturaResponse user)
    {
        var resultado = await facturaServices.Eliminar(user.ToRequest());
        if (resultado.Success)
        {
            await Consultar();
            StateHasChanged();
        }
    }
    // Método para mostrar detalles de la factura seleccionada
    void MostrarDetalles(FacturaResponse factura)
    {
        SelectedFactura = factura;
        FacturaDetalles = factura.Detalles.ToList();
        ShowDetails = true;
    }
    private async Task PrintPageAsync()
    {
        // Llama a la función JavaScript para imprimir la página
        await JSRuntime.InvokeVoidAsync("printPage");
    }
    
}