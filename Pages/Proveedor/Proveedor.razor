@page "/proveedor"
@using FactuSystem.Data.Request;
@inject IClienteServices ClienteServices;
@inject IJSRuntime JSRuntime;


    <div style="margin-left: 450px;">

        <h1 class="titulo-clientes">Listado de Proveedores</h1>

        <style>


            /* Estilo para resaltar las filas al pasar el cursor */
            .table-hover tbody tr:hover {
            background-color: #f5f5f5; /* Cambia el color al pasar el cursor */
            }

            /* Estilo para el contenedor de la tabla */
            .table-container {
            margin-top: -5px;
            }

            /* Estilo para el cuerpo de la tarjeta */
            .card-body {
            padding: 19px;

            }

            /* Estilo para centrar el texto en las celdas de la tabla */
            .table th, .table td {
            text-align: center;
            }

            .titulo-clientes {
            background-color:  steelblue; /* Fondo oscuro */
            color: #ffffff; /* Texto blanco */
            text-align: center; /* Centrar texto */
            padding: 10px; /* A�adir espacio alrededor del texto */


            }

        </style>

        <div class="modal" style="display: @(showCard ? "block" : "none"); background-color: rgba(0, 0, 0, 0.5);">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title"><b>@TituloForm</b></h5>
                        <button type="button" class="close btn btn-outline-danger" data-dismiss="modal" aria-label="Close" @onclick="CloseCard">
                            <span aria-hidden="true" class="oi oi-x"></span>
                        </button>
                    </div>

                    <EditForm Model="proveedorRequest" OnValidSubmit="Send">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="modal-body">
                            <div class="form-group input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text bg-white text-black border-0">
                                        <span class="oi oi-person"></span>
                                    </span>
                                </div>
                                <input type="text" class="form-control" placeholder="Nombre" 
                                @bind-value="proveedorRequest.NombreEmp" required />
                            </div>
                            <div class="form-group input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text bg-white text-black border-0">
                                        <span class="oi oi-envelope-closed"></span>
                                    </span>
                                </div>
                                <input id="emailInput" type="email" class="form-control" placeholder="Email" 
                                @bind-value="proveedorRequest.Email" required />
                            </div>


                            <div class="form-group input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text bg-white text-black border-0">
                                        <span class="oi oi-phone"></span>
                                    </span>
                                </div>
                                <input class="form-control" placeholder="Teléfono" 
                                @bind-value="proveedorRequest.Telefono" 
                                pattern="\d{3}-\d{3}-\d{4}" 
                                title="Ingrese un número de teléfono en formato 000-000-0000" required />
                            </div>

                            <div class="form-group input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text bg-white text-black border-0">
                                        <span class="oi oi-map-marker"></span>
                                    </span>
                                </div>
                                <input class="form-control" placeholder="Dirección" 
                                @bind-value="proveedorRequest.Direccion" required />
                            </div>
                        </div>


                        <div class="modal-footer">
                            <div class="btn-group">
                                <button type="submit" class="btn btn-outline-primary">
                                    <span class="oi oi-check"></span> Guardar
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <div class="table-container ">
            <div class="card w-130">

                <h1 class="titulo-clientes">Listado de Proveedores</h1>
                <div class="card-body">
                    <!-- Button trigger modal -->

                    <div class="col-md-3" style="margin-top: 20px; margin-left: 20px;">
                        <button class="btn btn-outline-primary" @onclick="ShowCard">
                            <span class="oi oi-plus"></span>
                        </button>

                        <button class="btn btn-outline-primary d-print-none" @onclick="async ()=>{await PrintPageAsync();}">
                            <span class="oi oi-print"></span>
                        </button>
                    </div

                    <div class="row justify-content-end">
                        <div class="col-6">
                            <div class="input-group">
                                <input type="text" class="form-control border-0 border-bottom" 
                                placeholder="Buscar por nombre" @bind="Filtro">
                                <button class="btn btn-outline input-group-text border-0 bg-white" type="button" id="button-addon2" @onclick="()=>CargarContactos()">
                                    <span class="oi oi-magnifying-glass text-black"></span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="row-12 mt-2">
                        <!-- A�adido 'table-hover' a la clase 'table' para resaltar filas al pasar el cursor -->
                        <table class="table table-hover">
                            <thead class="table" style="background-color:steelblue;">
                                <tr>
                                    <th>ID</th>
                                    <th>Nombre/Empresa</th>
                                    <th>Email</th>


                                    <th>Teléfono</th>
                                    <th>Dirección</th>

                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var provedorrow in Proveedores)
                                {
                                    <tr>
                                        <td>@provedorrow.Id</td>
                                        <td>@provedorrow.NombreEmp</td>
                                        <td>@provedorrow.Email</td>


                                        <td>@provedorrow.Telefono</td>
                                        <td>@provedorrow.Direccion</td>

                                        <td>
                                            <button @onclick="()=>Seleccionar(provedorrow.Id)"
                                            class="btn btn-outline-warning">
                                                <span class="oi oi-pencil"></span>
                                            </button>
                                            <button @onclick="()=>Eliminar(provedorrow)"
                                            class="btn btn-outline-danger">
                                                <span class="oi oi-trash"></span>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>


    </div>


    
@code {

    private async Task PrintPageAsync()
    {

        urlHelper.NavigateTo("/reporteproveedor");
        //await JSRuntime.InvokeVoidAsync("printPage");


    }
    private bool imprimiendo = false;
        private bool isPrinting = false;

    public string TituloForm => proveedorRequest.Id == 0 ?
    "Agregar proveedor" : "Modificar proveedor";

    public string Filtro { get; set; } = "";
    public bool ShowForm { get; set; } = false;
    public List<ProveedorResponse> Proveedores { get; set; } = new();
    public ProveedorRequest proveedorRequest { get; set; } = new();
    public bool showCard { get; set; } = false;



    void ShowCard()
    {
        showCard = true;
    }

    void CloseCard()
    {
        proveedorRequest = new ProveedorRequest();
        showCard = false;
    }

    async Task CargarContactos()
    {
        var resultado =
        await proveedorServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Proveedores = resultado.Data!;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarContactos();
    }

    void Cancelar()
    {
        proveedorRequest = new ProveedorRequest();
        showCard = false;
    }
    public async Task Send()
    {
        if (proveedorRequest.Id == 0)
        {
            //Debo registrar el contacto..
            var r = await proveedorServices.Crear(proveedorRequest);
            if (r.Success)
            {
                Cancelar();
                await CargarContactos();
                StateHasChanged();
            }
        }
        else
        {
            //Debo solicitar modificar el contacto...
            var r = await proveedorServices.Modificar(proveedorRequest);
            if (r.Success)
            {
                Cancelar();
                await CargarContactos();
                StateHasChanged();
            }
        }
    }

    public void Seleccionar(int Id)
    {
        showCard = true;
        proveedorRequest = Proveedores
        .Where(c => c.Id == Id)
        .Select(c => c.ToRequest())
        .FirstOrDefault() ?? new ProveedorRequest();
    }
    public async Task Eliminar(ProveedorResponse item)
    {
        var resultado = await proveedorServices.Eliminar(item.ToRequest());
        if (resultado.Success)
        {
            await CargarContactos();
            StateHasChanged();
        }
    }


}